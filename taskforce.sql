-- MySQL Script generated by MySQL Workbench
-- Sun Mar 14 10:37:33 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema taskforce
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema taskforce
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `taskforce` DEFAULT CHARACTER SET utf8 ;
USE `taskforce` ;

-- -----------------------------------------------------
-- Table `taskforce`.`cities_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taskforce`.`cities_list` ;

CREATE TABLE IF NOT EXISTS `taskforce`.`cities_list` (
  `city_id` INT NOT NULL AUTO_INCREMENT,
  `city_title` VARCHAR(128) NOT NULL,
  `latitude` DECIMAL(8,6) NOT NULL,
  `longtide` DECIMAL(8,6) NOT NULL,
  PRIMARY KEY (`city_id`),
  INDEX `city_title_idx` (`city_title` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taskforce`.`users` ;

CREATE TABLE IF NOT EXISTS `taskforce`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `reg_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `email` VARCHAR(128) NOT NULL,
  `name` VARCHAR(128) NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `avatar_path` VARCHAR(512) NULL,
  `birthday` DATE NULL,
  `about` TEXT NULL,
  `city` INT NULL,
  `role` INT NOT NULL DEFAULT 0,
  `phone` VARCHAR(45) NULL,
  `skype` VARCHAR(128) NULL,
  `telegram` VARCHAR(128) NULL,
  `is_show_profile` INT NULL DEFAULT 0,
  `is_new messages` INT NULL DEFAULT 0,
  `is_new_reviews` INT NULL DEFAULT 0,
  `is_new_actions` INT NULL DEFAULT 0,
  `is_show_contacts` INT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `user_city_idx` (`city` ASC),
  CONSTRAINT `user_city`
    FOREIGN KEY (`city`)
    REFERENCES `taskforce`.`cities_list` (`city_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`task_categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taskforce`.`task_categories` ;

CREATE TABLE IF NOT EXISTS `taskforce`.`task_categories` (
  `category_id` INT NOT NULL AUTO_INCREMENT,
  `category_title` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`category_id`),
  INDEX `category_title_idx` (`category_title` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`task_statuses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taskforce`.`task_statuses` ;

CREATE TABLE IF NOT EXISTS `taskforce`.`task_statuses` (
  `status_id` INT NOT NULL AUTO_INCREMENT,
  `status_name` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taskforce`.`tasks` ;

CREATE TABLE IF NOT EXISTS `taskforce`.`tasks` (
  `task_id` INT NOT NULL AUTO_INCREMENT,
  `create_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `task_title` VARCHAR(64) NOT NULL,
  `task_description` TEXT NULL,
  `cat_id` INT NOT NULL,
  `task_city` INT NULL,
  `price` INT NULL,
  `date_to` DATETIME NULL,
  `task_status` INT NOT NULL DEFAULT 0,
  `task_executor` INT NULL,
  `task_customer` INT NOT NULL,
  PRIMARY KEY (`task_id`),
  INDEX `task_categiry_idx` (`cat_id` ASC),
  INDEX `current_status_idx` (`task_status` ASC),
  INDEX `city_task_idx` (`task_city` ASC),
  CONSTRAINT `task_categiry`
    FOREIGN KEY (`cat_id`)
    REFERENCES `taskforce`.`task_categories` (`category_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `current_status`
    FOREIGN KEY (`task_status`)
    REFERENCES `taskforce`.`task_statuses` (`status_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `city_task`
    FOREIGN KEY (`task_city`)
    REFERENCES `taskforce`.`cities_list` (`city_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`task_attachments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taskforce`.`task_attachments` ;

CREATE TABLE IF NOT EXISTS `taskforce`.`task_attachments` (
  `attachment_id` INT NOT NULL AUTO_INCREMENT,
  `for_task` INT NOT NULL,
  `attachments_path` VARCHAR(512) NOT NULL,
  PRIMARY KEY (`attachment_id`),
  INDEX `task_idx` (`for_task` ASC),
  CONSTRAINT `task`
    FOREIGN KEY (`for_task`)
    REFERENCES `taskforce`.`tasks` (`task_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`user_portfolio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taskforce`.`user_portfolio` ;

CREATE TABLE IF NOT EXISTS `taskforce`.`user_portfolio` (
  `file_id` INT NOT NULL AUTO_INCREMENT,
  `user_folio` INT NOT NULL,
  `file_path` VARCHAR(512) NOT NULL,
  PRIMARY KEY (`file_id`),
  INDEX `user_idx` (`user_folio` ASC),
  CONSTRAINT `user`
    FOREIGN KEY (`user_folio`)
    REFERENCES `taskforce`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`messages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taskforce`.`messages` ;

CREATE TABLE IF NOT EXISTS `taskforce`.`messages` (
  `messages_id` INT NOT NULL AUTO_INCREMENT,
  `sender_id` INT NOT NULL,
  `recipient_id` INT NOT NULL,
  `in_task` INT NOT NULL,
  `message` TEXT NOT NULL,
  `message_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`messages_id`),
  INDEX `sender_idx` (`sender_id` ASC),
  INDEX `recipient_idx` (`recipient_id` ASC),
  INDEX `message_in_task_idx` (`in_task` ASC),
  CONSTRAINT `sender`
    FOREIGN KEY (`sender_id`)
    REFERENCES `taskforce`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `recipient`
    FOREIGN KEY (`recipient_id`)
    REFERENCES `taskforce`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `message_in_task`
    FOREIGN KEY (`in_task`)
    REFERENCES `taskforce`.`tasks` (`task_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`reviews`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taskforce`.`reviews` ;

CREATE TABLE IF NOT EXISTS `taskforce`.`reviews` (
  `review_id` INT NOT NULL AUTO_INCREMENT,
  `review_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `review_executor` INT NOT NULL,
  `review_customer` INT NOT NULL,
  `task_review` INT NOT NULL,
  `mark` INT NOT NULL,
  `comment` TEXT NOT NULL,
  PRIMARY KEY (`review_id`),
  INDEX `for_executor_idx` (`review_executor` ASC),
  INDEX `from_customer_idx` (`review_customer` ASC),
  INDEX `review_in_task_idx` (`task_review` ASC),
  CONSTRAINT `for_executor`
    FOREIGN KEY (`review_executor`)
    REFERENCES `taskforce`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `from_customer`
    FOREIGN KEY (`review_customer`)
    REFERENCES `taskforce`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `review_in_task`
    FOREIGN KEY (`task_review`)
    REFERENCES `taskforce`.`tasks` (`task_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`task_response`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taskforce`.`task_response` ;

CREATE TABLE IF NOT EXISTS `taskforce`.`task_response` (
  `response_id` INT NOT NULL AUTO_INCREMENT,
  `response_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `response_executor` INT NOT NULL,
  `response_task` INT NOT NULL,
  `response_price` INT NULL,
  `response_comment` TEXT NOT NULL,
  PRIMARY KEY (`response_id`),
  INDEX `from_executor_idx` (`response_executor` ASC),
  INDEX `response_for_task_idx` (`response_task` ASC),
  CONSTRAINT `from_executor`
    FOREIGN KEY (`response_executor`)
    REFERENCES `taskforce`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `response_for_task`
    FOREIGN KEY (`response_task`)
    REFERENCES `taskforce`.`tasks` (`task_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
